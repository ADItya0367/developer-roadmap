---
import { EmptyView } from '../../../../components/Course/EmptyView';
import SkeletonLayout from '../../../../layouts/SkeletonLayout.astro';
import {
  getAllCourses,
  getChaptersByCourseId,
  type ChapterFileType,
  type CourseFileType,
} from '../../../../lib/course';

export async function getStaticPaths() {
  const courses = await getAllCourses();
  const coursesWithChapters = await Promise.all(
    courses.map(async (course) => {
      const chapters = await getChaptersByCourseId(course.id);

      return chapters.map((chapter) => {
        return {
          params: {
            courseId: course.id,
            chapterId: chapter.id,
          },
          props: {
            course: {
              ...course,
              chapters,
            },
            chapter,
          },
        };
      });
    }),
  );

  return coursesWithChapters.flat();
}

interface Params extends Record<string, string | undefined> {
  courseId: string;
  chapterId: string;
}

interface Props {
  course: CourseFileType & { chapters: ChapterFileType[] };
  chapter: ChapterFileType;
}

const { courseId, chapterId } = Astro.params;
const { course } = Astro.props;
---

<SkeletonLayout title={course.frontmatter.title}>
  <EmptyView
    activeCourseId={courseId}
    activeChapterId={chapterId}
    title={course.frontmatter.title}
    chapters={course.chapters}
    client:load
  />
</SkeletonLayout>
